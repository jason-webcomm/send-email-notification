name: build-docker-image

concurrency:
  cancel-in-progress: ${{ ! startsWith(github.ref, 'refs/tags/') }}
  group: ci-${{ github.ref_name }}-${{ github.event_name }}

on:
  push:
    branches:
      - main
  release:
    types:
      - published

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}
      - id: image-tag
        name: Set image tag
        run: |
          echo "image-tag=$(echo ${{ github.sha }} | cut -c 1-7 )" >> $GITHUB_OUTPUT
      - if: github.ref == 'refs/heads/main'
        name: Build image (edge)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ steps.image-tag.outputs.image-tag }}
            ${{ env.REGISTRY }}/${{ github.repository }}:latest
      - if: github.event_name == 'release' && github.event.action == 'published'
        name: Build image (stable)
        uses: docker/build-push-action@v6
        with:
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.ref_name }}

  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: "x64"
      - name: Run linters
        run: |
          pip install -U pip pre-commit
          pre-commit run -a

  self-test-edge:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - name: Send normal email
        uses: licenseware/send-email-notification@main
        with:
          api-key: ${{ secrets.SENDGRID_API_KEY }}
          subject: ${{ github.repository }}:${{ github.run_id }}
          from-email: ${{ secrets.SENDGRID_FROM_EMAIL }}
          to-email: ${{ secrets.SENDGRID_TO_EMAIL }}
          markdown-body: |
            # Hello World

            This is a test email from self-test-action
      - name: Send email with attachments
        uses: licenseware/send-email-notification@main
        with:
          api-key: ${{ secrets.SENDGRID_API_KEY }}
          subject: ${{ github.repository }}:${{ github.run_id }}
          from-email: ${{ secrets.SENDGRID_FROM_EMAIL }}
          to-email: ${{ secrets.SENDGRID_TO_EMAIL }}
          markdown-body: |
            # Hello again

            Check the following sources
          attachments: |
            Dockerfile
            main.py
          attachments-disposition: inline

  self-test-stable:
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - name: Send normal email
        uses: licenseware/send-email-notification@v1
        with:
          api-key: ${{ secrets.SENDGRID_API_KEY }}
          subject: ${{ github.repository }}:${{ github.ref_name }}
          from-email: ${{ secrets.SENDGRID_FROM_EMAIL }}
          to-email: ${{ secrets.SENDGRID_TO_EMAIL }}
          markdown-body: ${{ github.event.release.body }}

  trivy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scan-type:
          - fs
          - config
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Trivy ${{ matrix.scan-type }}
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: "1"
          scan-ref: .
          scan-type: ${{ matrix.scan-type }}
          trivy-config: trivy.yaml
